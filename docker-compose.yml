version: '3.9'

services:
  app:
    build:
      context: .
      dockerfile: docker/node/Dockerfile
      args:
        NODE_ENV: ${NODE_ENV:-production}
    container_name: innovation-app
    restart: unless-stopped
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - JWT_SECRET=${JWT_SECRET}
      - DOMAIN=${DOMAIN}
      - PROTOCOL=${PROTOCOL}
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    ports:
      - "${PORT:-3000}:3000"
    networks:
      - innovation_net
    depends_on:
      db:
        condition: service_healthy

  db:
    image: mariadb:10.11
    container_name: innovation-db
    restart: unless-stopped
    environment:
      - MARIADB_ROOT_PASSWORD=${DB_PASSWORD}
      - MARIADB_DATABASE=${DB_NAME}
      - MARIADB_USER=${DB_USER}
      - MARIADB_PASSWORD=${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    ports:
      - "127.0.0.1:3306:3306"
    networks:
      - innovation_net
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:5.2.1
    container_name: innovation-phpmyadmin
    restart: unless-stopped
    environment:
      - PMA_HOST=db
      - PMA_PORT=${DB_PORT}
    networks:
      - innovation_net
    depends_on:
      db:
        condition: service_healthy

 mongo:
   image: mongo:4.4
   container_name: innovation-mongo
   restart: unless-stopped
   command: mongod
   volumes:
     - mongo_data:/data/db
   networks:
     - innovation_net
   healthcheck:
     test: ["CMD", "mongo", "--eval", "db.runCommand('ping').ok"]
     interval: 10s
     timeout: 10s
     retries: 5
     start_period: 40s


  discourse:
    image: bitnami/discourse:2.1.8
    container_name: innovation-forum
    restart: unless-stopped
    environment:
      - DISCOURSE_HOST=${DOMAIN}
      - DISCOURSE_POSTGRESQL_HOST=discourse-db
      - DISCOURSE_POSTGRESQL_PORT_NUMBER=5432
      - DISCOURSE_POSTGRESQL_USER=discourse
      - DISCOURSE_POSTGRESQL_PASSWORD=${DISCOURSE_DB_PASSWORD}
      - DISCOURSE_POSTGRESQL_DATABASE=discourse
      - DISCOURSE_ADMIN_EMAIL=${ADMIN_EMAIL}
      - DISCOURSE_ADMIN_PASSWORD=${DISCOURSE_ADMIN_PASSWORD}
    networks:
      - innovation_net
    depends_on:
      discourse-db:
        condition: service_healthy

  discourse-db:
    image: bitnami/postgresql:15
    container_name: innovation-forum-db
    restart: unless-stopped
    environment:
      - POSTGRESQL_USERNAME=discourse
      - POSTGRESQL_PASSWORD=${DISCOURSE_DB_PASSWORD}
      - POSTGRESQL_DATABASE=discourse
    volumes:
      - discourse_db_data:/bitnami/postgresql
    networks:
      - innovation_net
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "discourse"]
      interval: 10s
      timeout: 5s
      retries: 5

  rocketchat:
    image: rocketchat/rocket.chat:5.4.0
    container_name: innovation-chat
    restart: unless-stopped
    environment:
      - MONGO_URL=mongodb://mongo:27017/rocketchat?replicaSet=rs0
      - MONGO_OPLOG_URL=mongodb://mongo:27017/local?replicaSet=rs0
      - ROOT_URL=${PROTOCOL}://${DOMAIN}/chat
      - PORT=3000
      - DEPLOY_METHOD=docker
      - ADMIN_USERNAME=admin
      - ADMIN_PASS=${ROCKETCHAT_ADMIN_PASSWORD}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - innovation_net
    healthcheck:
      test: >
        curl --fail http://localhost:3000 ||
        exit 1
      interval: 30s
      timeout: 10s
      retries: 5

  nextcloud:
    image: nextcloud:26.0.0
    container_name: innovation-nextcloud
    restart: unless-stopped
    environment:
      - POSTGRES_HOST=nextcloud-db
      - POSTGRES_USER=nextcloud
      - POSTGRES_PASSWORD=${NEXTCLOUD_DB_PASSWORD}
      - NEXTCLOUD_ADMIN_USER=admin
      - NEXTCLOUD_ADMIN_PASSWORD=${NEXTCLOUD_ADMIN_PASSWORD}
    volumes:
      - nextcloud_data:/var/www/html
    networks:
      - innovation_net
    depends_on:
      nextcloud-db:
        condition: service_healthy

  nextcloud-db:
    image: postgres:15
    container_name: innovation-nextcloud-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=nextcloud
      - POSTGRES_USER=nextcloud
      - POSTGRES_PASSWORD=${NEXTCLOUD_DB_PASSWORD}
    volumes:
      - nextcloud_db_data:/var/lib/postgresql/data
    networks:
      - innovation_net
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "nextcloud"]
      interval: 10s
      timeout: 5s
      retries: 5

  gitbook:
    image: fellah/gitbook:latest
    container_name: innovation-docs
    restart: unless-stopped
    volumes:
      - ./docs:/srv/gitbook
    environment:
      - TITLE=Red de Innovación FP
      - DESCRIPTION=Documentación del sistema
      - PORT=4000
    networks:
      - innovation_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000"]
      interval: 30s
      timeout: 10s
      retries: 5

  jitsi-web:
    image: jitsi/web:stable-7648
    container_name: innovation-meet
    restart: unless-stopped
    environment:
      - PUBLIC_URL=${PROTOCOL}://${DOMAIN}/meet
      - ENABLE_AUTH=1
      - ENABLE_GUESTS=1
      - XMPP_DOMAIN=meet.jitsi
      - XMPP_AUTH_DOMAIN=auth.meet.jitsi
      - XMPP_BOSH_URL_BASE=http://xmpp.meet.jitsi:5280
      - TZ=Europe/Madrid
      - DISABLE_HTTPS=1
    networks:
      - innovation_net
    volumes:
      - ./docker/jitsi/web:/config

networks:
  innovation_net:
    driver: bridge

volumes:
  db_data:
  mongo_data:
  discourse_db_data:
  nextcloud_data:
  nextcloud_db_data:
